#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define size_restaurant  17 //음식점의 개수
typedef struct restaurant { // 음식점의 이름, 거리, 지역, 메뉴, 주소(전화번호), 정보를 담은 구조체
	char name[20];
	double distance;
	int area;
	int menu;
	char address_phonenumber[100];
	char information[200];
}restaurant;

void sort_distance_restaurant(restaurant list[size_restaurant]); // 거리에 따른 음식점 정렬 함수
void swap_restaurant(restaurant* x, restaurant* y); //음식점 정렬 하는데 도움을 주는 변환 함수

int main() {
	int i;
	char* a2;
	int b2, c2;
	double d2;

	restaurant list_restaurant[size_restaurant];// 음식점 구조체 배열 선언
	FILE* p2;

	p2 = fopen("data_restaurant.csv", "r"); // 음식점을 담은 파일을 연다.

	if (p2 == NULL) {
		printf("파일 읽기 실패!");
		return -1;
	}

	char line2[1024];
	for (i = 0; i < size_restaurant; i++) {
		fgets(line2, 1024, p2);
		a2 = strtok(line2, ",");
		while (a2 != NULL) {
			strcpy(list_restaurant[i].name, a2);
			a2 = strtok(NULL, ",");
			b2 = atoi(a2);
			list_restaurant[i].area = b2;
			a2 = strtok(NULL, ",");
			c2 = atoi(a2);
			list_restaurant[i].menu = c2;
			a2 = strtok(NULL, ",");
			d2 = atof(a2);
			list_restaurant[i].distance = d2;
			a2 = strtok(NULL, ",");
			strcpy(list_restaurant[i].address_phonenumber, a2);
			a2 = strtok(NULL, ",");
			strcpy(list_restaurant[i].information, a2);
			a2 = strtok(NULL, ",");

		}
	}

	sort_distance_restaurant(list_restaurant); //거리에 따른 음식점 정렬함수 실행

	fclose(p2);

	return 0;
}

void sort_distance_restaurant(restaurant list[size_restaurant]) {
	int i, min, j;

	for (i = 1; i < size_restaurant; i++) {
		min = i;
		for (j = i + 1; j < size_restaurant; j++) {
			if (list[j].distance < list[min].distance)
				min = j;
		}
		swap_restaurant(&list[i], &list[min]);
	}

	printf("<< 거리순 정렬 >> \n");
	printf("\n");
	for (i = 1; i < size_restaurant; i++) {
		printf("%s \n", list[i].name);
		printf("거리: %.1lfkm \n", list[i].distance);
		printf("주소(전화번호): %s \n", list[i].address_phonenumber);
		printf("정보: %s \n", list[i].information);
		printf("\n");

	}

}

void swap_restaurant(restaurant* x, restaurant* y) {
	restaurant temp;

	temp = *x;
	*x = *y;
	*y = temp;
}
