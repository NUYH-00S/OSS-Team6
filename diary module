#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#define MAX 1000
#define size_place 3
typedef struct place {
    char name[20];
    int star;
    char review[100];    
} place;

void search_place(place list[size_place]);

int main() {
    place list_place[size_place];

    char* fileName = "data_place_review.csv";
    FILE* file = fopen(fileName, "a+b");

    if (file == NULL) {
        printf("파일 열기 실패\n");
        return 1;
    }

    int i;
    for (i = 0; i <= size_place; i++) {
        fscanf(file, "%s %d %s", &list_place[i].name, &list_place[i].star , &list_place[i].review);
    }

    search_place(list_place);

    fclose(file);

    return 0;
}

void search_place(place list[size_place]) {
    int PlaceNum;
    char* fileName = "data_place_review.csv";
    FILE* file = fopen(fileName, "a+b");
    char contents[MAX];

    printf("1.국립청주박물관 2.애쁘르팜 3.상당산성 : ");
    scanf_s("%d", &PlaceNum);

    switch (PlaceNum) {
    case 1:{
        printf("%s %d %s", &list[1].name, &list[1].star, &list[1].review);
        while (1) {
            scanf("%[^\n]", contents);
            getchar();

            if (strcmp(contents, "EXIT") == 0) {
                printf("\n\t리뷰 입력을 종료합니다.\n\n");
                break;
            }
            fputs(contents, file);
            fputs("\n", file);
        }
        break;
    }
    case 2: {
        printf("%s %d %s", &list[2].name, &list[2].star, &list[2].review);
        while (1) {
            scanf("%[^\n]", contents);
            getchar();

            if (strcmp(contents, "EXIT") == 0) {
                printf("\n\t리뷰 입력을 종료합니다.\n\n");
                break;
            }
            fputs(contents, file);
            fputs("\n", file);
        }
        break;
    }
    case 3: {
        printf("%s %d %s", &list[3].name, &list[3].star, &list[3].review);
        while (1) {
            scanf("%[^\n]", contents);
            getchar();

            if (strcmp(contents, "EXIT") == 0) {
                printf("\n\t리뷰 입력을 종료합니다.\n\n");
                break;
            }
            fputs(contents, file);
            fputs("\n", file);
        }
        break;
    }
    }
}
