#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX 512
#define size_place 34
typedef struct place {
	char name[32];
	char review[512];
} place;

void search_place(place list[size_place]);

int main() {
	place list_place[size_place];

	search_place(list_place);

	return 0;
}


void search_place(place list[size_place])
{
	place list_place[size_place];

	int i, j, k;
	char* ptr;
	char line[MAX];

	int PlaceNum;
	char review_contents[MAX];

	char* fileName = "data_review.csv";
	FILE* file = fopen(fileName, "a+b");
	if (file == NULL) {
		printf("파일 열기 실패\n");
		return 1;
	}

	for (i = 0; i < size_place; i++)
	{
		fgets(line, MAX, file);
		ptr = strtok(line, ",");
		while (ptr != NULL) {
			strcpy(list_place[i].name, ptr);
			ptr = strtok(NULL, ",");
			strcpy(list_place[i].review, ptr);
			ptr = strtok(NULL, ",");
		}
	}


	printf("\n\t기행문을 남길 장소를 선택하세요.\n\n1.국립청주박물관 2.애쁘르팜 3.상당산성 : ");
	scanf_s("%d", &PlaceNum);
	switch (PlaceNum)
	{
		
	case 1:
	{
		j = 1;
		printf("\n\texit을 입력하면 종료합니다.\n\n\n");
		printf("%s: %s", list_place[j].name, list_place[j].review);
		while (1)
		{
			scanf("%[^\n]", review_contents);
			getchar();

			if (strcmp(review_contents, "exit") == 0) {
				printf("\n\t리뷰 입력을 종료합니다.\n\n");
				break;
			}			
		}
		strcpy(list_place[j].review, review_contents);
				
		break;
	}
	}

	for (k = 0; k < size_place; k++)
	{
		fputs(list_place[k].name, file);
		fputs(",", file);
		fputs(list_place[k].review, file);
		fputs(",", file);
		
	}

	fclose(file);
}
