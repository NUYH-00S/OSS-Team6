#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX 10000
#define size_place 3
typedef struct place {
	char name[32];
	char blank[16];
} place;

void search_place(place list[size_place]);
void review(char* reviewName);

int main() {
	place list_place[size_place];

	search_place(list_place);
	

	return 0;
}


void search_place(place list[size_place])
{
	place list_place[size_place];

	int i, j, l;
	char* ptr;
	char line[MAX];

	int SelectPlace;
	
	char* fileName = "data_review.csv";
	FILE* file = fopen(fileName, "rb");
	if (file == NULL) {
		printf("파일 열기 실패\n");
		return 1;
	}

	for (i = 0; i < size_place; i++)
	{
		fgets(line, MAX, file);
		ptr = strtok(line, ",");


		while (ptr != NULL) {
			strcpy(list_place[i].name, ptr);
			ptr = strtok(NULL, ",");
			strcpy(list_place[i].blank, ptr);
			ptr = strtok(NULL, ",");
		}
	}
	fclose(file);



	printf("\n\t기행문을 남길 장소를 선택하세요.\n\n");
	for (l = 1; l < size_place; l++)
	{
		printf("%d.%s  ", l, list_place[l].name);
	}
	printf("\n\n선택지: ");
	scanf_s("%d", &SelectPlace);
	switch (SelectPlace)
	{
	case 1:
	{
		j = 1;
		printf("\t<%s>\n", list_place[j].name);
		printf("\n\texit을 입력하면 종료합니다.\n\n\n");
		review("review2.txt");
		
		break;
	}
	}	
}



void review(char* reviewName)
{
	char line[MAX];
	char contents[MAX];

	char* fileName = reviewName;
	FILE* file = fopen(fileName, "a+b");
	if (file == NULL)
	{
		printf("파일 열기 실패\n");
		return 1;
	}

	while (fgets(line, MAX, file) != NULL) {
		printf("%s", line);
	}
	while (1)
	{
		scanf("%[^\n]", contents);
		getchar();

		if (strcmp(contents, "EXIT") == 0)
		{
			printf("\n\t리뷰 입력을 종료합니다.\n\n");
			break;
		}

		fputs(contents, file);
		fputs("\n", file);
	}
	fclose(file);
}
