#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX 512
#define size_place 34
typedef struct place {
	char name[32];
	char review[512];
} place;

void search_place(place list[size_place]);
void RemoveEnd(char* buf)
{
	int i = 0;
	while (buf[i])//buf[i]가 참(널문자가 아님)이면 반복하여라.
	{
		i++;
	}
	//현재 i는 널문자가 있는 위치, i-1은 마지막 문자 위치
	buf[i - 1] = '\0';
}

int main() {
	place list_place[size_place];

	search_place(list_place);

	return 0;
}


void search_place(place list[size_place])
{
	place list_place[size_place];

	int i, j;
	char* ptr;
	char line[MAX];

	int PlaceNum;
	char review_contents[MAX];

	char* fileName = "data_review.csv";
	FILE* file = fopen(fileName, "a+b");
	if (file == NULL) {
		printf("파일 열기 실패\n");
		return 1;
	}

	for (i = 0; i < size_place; i++)
	{
		fgets(line, MAX, file);
		ptr = strtok(line, ",");
		while (ptr != NULL) {
			strcpy(list_place[i].name, ptr);
			ptr = strtok(NULL, ",");
			strcpy(list_place[i].review, ptr);
			ptr = strtok(NULL, ",");
		}
	}


	printf("기행문을 남길 장소를 선택하세요.\n1.국립청주박물관 2.애쁘르팜 3.상당산성 : ");
	scanf_s("%d", &PlaceNum);
	switch (PlaceNum)
	{
		printf("EXIT을 입력하면 종료합니다.\N");
	case 1:
	{
		int j = 1;

		printf("%s: %s", list_place[j].name, list_place[j].review);
		while (1)
		{
			scanf("%[^\n]", review_contents);
			getchar();

			if (strcmp(review_contents, "EXIT") == 0) {
				printf("\n\t리뷰 입력을 종료합니다.\n\n");
				break;
			}
			strcpy(list_place[j].review, review_contents);
		}
		char name1[32];
		char review1[MAX];
		for (i = 0; i < size_place; i++)
		{
			fputs(list_place[i].name, file);
			fputs(",", file);
			fputs(list_place[i].review, file);
			fputs(",", file);
		}
		fclose(file);
		break;
	}
	}
}
