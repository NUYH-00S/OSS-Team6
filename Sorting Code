#include<stdio.h>
#define size 3 //구조체 배열의 크기, 장소 개수에 따라 달라진다.

typedef struct place { // 장소의 이름, 거리, 별점의 정보를 담은 구조체
	char name[20];
	int distance;
	int rating;
}place;
 

void sort1(place list[size]); // 거리에 따른 정렬 함수
void sort2(place list[size]); //별점에 따른 정렬 함수
void swap_place(place* x, place* y); //정렬 하는데 도움을 주는 변환 함수

int main() {
	int i, j;
	place list[size]; //구조체 배열 선언
	FILE* p;

	char name[20];
	int distance;
	int rating;

	p = fopen("관광지.txt", "r"); //장소의 이름, 거리, 별점의 정보를 담은 파일을 연다.
	
	if (p == NULL) {
		printf("파일 읽기 실패!");
		return -1;
	}

	for (i = 0; i < size; i++) { //파일에 있는 정보들을 구조체 배열에 저장
		fscanf(p, "%s %d %d\n", list[i].name, &list[i].distance, &list[i].rating);
	}
	
	
	printf("\n");

	sort1(list); // 거리 정렬 함수 실행
	
	sort2(list); //별점 정렬 함수 실행

	fclose(p);

	return 0;
}

void sort1(place list[size]) {
	int i, min, j;
	
	for (i = 0; i < size; i++) {
		min = i;
		for (j = i + 1; j < size; j++) {
			if (list[j].distance < list[min].distance)
				min = j;
		}
		swap_place(&list[i], &list[min]);
	}

	printf("거리순 정렬 \n");
	for (i = 0; i < size; i++) {
		printf("%s ", list[i].name);
		printf("\n");
		printf("\n");
	}

}

void sort2(place list[size]) {
	int i, max, j;

	for (i = 0; i < size; i++) {
		max = i;
		for (j = i + 1; j < size; j++) {
			if (list[j].rating > list[max].rating)
				max = j;
		}
		
		swap_place(&list[i], &list[max]);
	}

	printf("별점순 정렬 \n");
	for (i = 0; i < size; i++) {
		printf("%s ", list[i].name);
		printf("\n");
		printf("\n");
	}

}

void swap_place(place* x, place* y) {
	place temp;

	temp = *x;
	*x = *y;
	*y = temp;
}
